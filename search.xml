<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Leetcode</title>
    <url>/c0a45ceb.html</url>
    <content><![CDATA[<p><strong><font color="indigo" font-size="5">领扣–引领新时尚</font></strong></p>
<h4 id="1-两数之和问题"><a href="#1-两数之和问题" class="headerlink" title="1. 两数之和问题"></a>1. 两数之和问题</h4><p>给定一个整数数组 <code>nums</code> 和一个目标值 <code>target</code>，请你在该数组中找出和为目标值的那 <strong>两个</strong> 整数，并返回他们的数组下标。</p>
<p>你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。</p>
<p><strong>示例:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">给定 nums = [2, 7, 11, 15], target = 9</span><br><span class="line"></span><br><span class="line">因为 nums[0] + nums[1] = 2 + 7 = 9</span><br><span class="line">所以返回 [0, 1]</span><br></pre></td></tr></table></figure>
<p>解法1–暴力解法</p>
<p>思路：</p>
<blockquote>
<p>给定一个数组和一个特定的目标值，对每一个数进行遍历，然后利用两层循环遍历的值进行if条件判断，如果相等，则返回下标；否则返回None.</p>
</blockquote>
<p>具体实现：</p>
<blockquote>
<p>class Solution:<br>def twoSum(self, nums,target):<br> for i in range(len(nums)):<br>     for j in range(i+1, len(nums)):<br>         if nums[i]+nums[j] == target:<br>             return [i, j]<br>         else:<br>             continue</p>
<p>nums = [2,7,11,15]<br>target = 9<br>solution = Solution()<br>print(solution.twoSum(nums,target))</p>
</blockquote>
<p>缺点：过于暴力，两层循环使得时间代价过高。</p>
<p>时间复杂度：O(n^2^)</p>
<p>解法2–较优化算法</p>
<p>思路：</p>
<blockquote>
<p>相比于暴力解法，此法优化了双层循环</p>
<p>一次循环遍历，然后用目标值减去数组中的每一个值，然后判断减去得到的值是否在数组中，进而再判断小标问题；</p>
</blockquote>
<p>具体实现：</p>
<blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">&gt; <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(self, nums, target)</span>:</span></span><br><span class="line">&gt; <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(nums)):</span><br><span class="line">&gt;  a = target - nums[i]</span><br><span class="line">&gt;  <span class="keyword">if</span> a <span class="keyword">in</span> nums:</span><br><span class="line">&gt;      b = nums.index(a)</span><br><span class="line">&gt;      <span class="keyword">if</span> b != i:</span><br><span class="line">&gt;          <span class="keyword">return</span> [i, b]</span><br><span class="line">&gt; </span><br><span class="line">&gt; nums = [<span class="number">2</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">15</span>]</span><br><span class="line">&gt; target = <span class="number">9</span></span><br><span class="line">&gt; solution = Solution()</span><br><span class="line">&gt; print(solution.twoSum(nums, target))</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>
</blockquote>
<p>解法3–优化算法 &lt;来源于网络，怪自己 :sweat:···&gt;</p>
<p>思路：</p>
<blockquote>
<p>优解:创建一个字典，通过循环把 target - nums[x]作为键，x作为值存入字典，边存边检查当前正在处理的nums[x]是否存在于字典中，存在：返回字典中nums[x]的值，和当前正在使用的x的值。</p>
</blockquote>
<p>具体实现：</p>
<blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">&gt; <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(self, nums, target)</span>:</span></span><br><span class="line">&gt; dic = &#123;&#125;</span><br><span class="line">&gt; <span class="keyword">for</span> x <span class="keyword">in</span> range(len(nums)):</span><br><span class="line">&gt;   <span class="keyword">if</span> target - nums[x] <span class="keyword">in</span> dic:</span><br><span class="line">&gt;      result = [dic[target - nums[x]], x]</span><br><span class="line">&gt;      <span class="keyword">return</span> result</span><br><span class="line">&gt;   dic[nums[x]] = x</span><br><span class="line">&gt;  </span><br><span class="line">&gt; nums = [<span class="number">2</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">15</span>]</span><br><span class="line">&gt; target = <span class="number">9</span></span><br><span class="line">&gt; solution = Solution()</span><br><span class="line">&gt; print(solution.twoSum(nums, target))</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>
</blockquote>
<hr>
<h4 id="2-回文数问题"><a href="#2-回文数问题" class="headerlink" title="2. 回文数问题"></a>2. 回文数问题</h4><p>判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p>
<p><strong>示例 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: 121</span><br><span class="line">输出: true</span><br></pre></td></tr></table></figure>
<p><strong>示例 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: -121</span><br><span class="line">输出: false</span><br><span class="line">解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。</span><br></pre></td></tr></table></figure>
<p><strong>示例 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入: 10</span><br><span class="line">输出: false</span><br><span class="line">解释: 从右向左读, 为 01 。因此它不是一个回文数。</span><br></pre></td></tr></table></figure>
<p>解法1–较优化解法</p>
<p>思路：</p>
<blockquote>
<p>将所给数字转化为<strong>字符串</strong>，因为回文数是具有对称性的，所以比较字符串的第一位和最后一位、第一次位和末尾次位 ······<font color="indigo">但是由于一位数以及负数和末尾为0的数的特殊性，应该加以判断。</font></p>
<p>由于对称性，所以考虑字符长度，奇偶数：通过模2判断只需要判断一般就可以了。</p>
</blockquote>
<p>实现：</p>
<blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="function"><span class="keyword">def</span> <span class="title">isPalindrome</span><span class="params">(self, x)</span>:</span></span><br><span class="line">&gt;   n = str(x)</span><br><span class="line">&gt;   print(n)</span><br><span class="line">&gt;   m = len(n)</span><br><span class="line">&gt;   count = <span class="number">0</span></span><br><span class="line">&gt;   <span class="keyword">if</span> m == <span class="number">1</span>:</span><br><span class="line">&gt;       <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">&gt;   <span class="keyword">elif</span> n[<span class="number">0</span>] == <span class="string">"-"</span> <span class="keyword">or</span> n[m<span class="number">-1</span>] == <span class="string">'0'</span>:</span><br><span class="line">&gt;       <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">&gt;   <span class="keyword">elif</span> m % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">&gt;       <span class="keyword">for</span> i <span class="keyword">in</span> range(int(m/<span class="number">2</span>)):</span><br><span class="line">&gt;           <span class="keyword">if</span> n[i] == n[m<span class="number">-1</span>-i]:</span><br><span class="line">&gt;               count += <span class="number">1</span></span><br><span class="line">&gt;           <span class="keyword">else</span>:</span><br><span class="line">&gt;               <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">&gt;   <span class="keyword">else</span>:</span><br><span class="line">&gt;       <span class="keyword">for</span> i <span class="keyword">in</span> range(int((m+<span class="number">1</span>)/<span class="number">2</span>)):</span><br><span class="line">&gt;           <span class="keyword">if</span> n[i] == n[m<span class="number">-1</span>-i]:</span><br><span class="line">&gt;               count += <span class="number">1</span></span><br><span class="line">&gt;           <span class="keyword">else</span>:</span><br><span class="line">&gt;               <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">&gt;   <span class="keyword">if</span> count == int(m/<span class="number">2</span>) <span class="keyword">or</span> count == int((m+<span class="number">1</span>)/<span class="number">2</span>):</span><br><span class="line">&gt;       <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">&gt; </span><br><span class="line">&gt; </span><br><span class="line">&gt; X = <span class="number">0</span></span><br><span class="line">&gt; solution = Solution()</span><br><span class="line">&gt; print(solution.isPalindrome(X))</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>
</blockquote>
<p>时间复杂度为 O(n)</p>
<p>执行代码，运行时间108 ms</p>
]]></content>
      <categories>
        <category>领扣算法题</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>Leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>RK71键盘说明书</title>
    <url>/24a253e0.html</url>
    <content><![CDATA[<center><font family="微软雅黑" size="5" color="‘indigo’">RK71蓝牙双模使用说明</font></center>

<h1 id="复合键功能"><a href="#复合键功能" class="headerlink" title="复合键功能"></a>复合键功能</h1><table>
<thead>
<tr>
<th>space</th>
<th>Win系统</th>
<th>Mac系统</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Fn+1</strong></td>
<td>F1</td>
<td>屏幕亮度+</td>
</tr>
<tr>
<td><strong>Fn+2</strong></td>
<td>F2</td>
<td>屏幕亮度-</td>
</tr>
<tr>
<td><strong>Fn+3</strong></td>
<td>F3</td>
<td>多任务切换</td>
</tr>
<tr>
<td><strong>Fn+4</strong></td>
<td>F4</td>
<td>所有多任务</td>
</tr>
<tr>
<td><strong>Fn+5</strong></td>
<td>F5</td>
<td>无</td>
</tr>
<tr>
<td><strong>Fn+6</strong></td>
<td>F6</td>
<td>无</td>
</tr>
<tr>
<td><strong>Fn+7</strong></td>
<td>F7</td>
<td>上一首</td>
</tr>
<tr>
<td><strong>Fn+8</strong></td>
<td>F8</td>
<td>播放/暂停</td>
</tr>
<tr>
<td><strong>Fn+9</strong></td>
<td>F9</td>
<td>下一首</td>
</tr>
<tr>
<td><strong>Fn+10</strong></td>
<td>F10</td>
<td>静音</td>
</tr>
<tr>
<td><strong>Fn+11</strong></td>
<td>F11</td>
<td>音量-</td>
</tr>
<tr>
<td><strong>Fn+12</strong></td>
<td>F12</td>
<td>音量+</td>
</tr>
</tbody>
</table>
<h1 id="功能键"><a href="#功能键" class="headerlink" title="功能键"></a>功能键</h1><table>
<thead>
<tr>
<th><strong>Fn+空格  长按3秒</strong>恢复出厂设置</th>
<th><strong>Fn+P(短按一下)</strong> 蓝牙/有线切换</th>
<th><strong>Fn+Tab</strong> 宏按键模式  开启/关闭</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Fn+A</strong> win系统</td>
<td><strong>Fn+P(长按3秒)</strong> 蓝牙配对</td>
<td><strong>Fn+Z/X/C(长按3秒)</strong> 3组宏按键录制</td>
</tr>
<tr>
<td><strong>Fn+S</strong> Mac系统</td>
<td><strong>Fn+Q/W/E/R/T</strong> 五组蓝牙设备</td>
<td><strong>Fn+↑/↓</strong> 背光亮度设置</td>
</tr>
<tr>
<td><strong>Fn+Win</strong> 锁定win键</td>
<td><strong>Fn+Home</strong> 17种背光切换</td>
<td><strong>Fn+←/→</strong> 背光速度设置</td>
</tr>
<tr>
<td></td>
<td><strong>Fn+Insert</strong> 侧边灯切换</td>
<td><strong>Fn+End</strong> 切换背光颜色</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<ul>
<li><p>如何输入波浪号~</p>
<p>Fn+Shift+ESC</p>
</li>
<li><p>如何输入圆点·</p>
<p>Fn+ESC</p>
</li>
<li><p>背景灯光设置</p>
<blockquote>
<p>Fn+Home 17种背光效果切换</p>
<p>Fn+End   切换背光颜色</p>
<p>Fn+Insert   10种侧翼灯切换</p>
</blockquote>
</li>
<li><p>背光亮度和速度设置</p>
<blockquote>
<p>Fn+ ↑    背光亮度增加</p>
<p>Fn+←   动态变换速度减小</p>
</blockquote>
</li>
<li><p>蓝牙功能</p>
<p>Fn+P(短按一下)  蓝牙和有线模式切换</p>
<blockquote>
<p>切换时背光灯闪烁两次，表示切换成功</p>
</blockquote>
<p>Fn+P(长按3秒)   进入蓝牙匹配模式</p>
<blockquote>
<p>配对时，p键持续闪烁，配对成功后停止闪烁</p>
</blockquote>
</li>
<li><p>蓝牙连接方法</p>
<p>1、打开键盘背部开关</p>
<p>2、确保键盘为蓝牙模式</p>
<blockquote>
<p>验证方法：Fn+Q全键背光闪烁2次证明为蓝牙模式，反之若无反应请通过Fn+P（短按）切换为蓝牙模式</p>
</blockquote>
<p>3、Fn+Q/W/E/R/T可连接5个设备</p>
<p>4、Fn+P长按3秒，使键盘进入配对模式，此时P键持续闪烁</p>
<p>5、打开电脑/手机/ipad等设备搜索蓝牙</p>
<p>6、连接成功，P键停止闪烁</p>
</li>
</ul>
<h1 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h1><ul>
<li><p>恢复出厂设置</p>
<p>Fn+空格 长按3秒</p>
<blockquote>
<p>全键背光闪烁2次，此时已完成出厂设置，会清除键盘所有信息，包括录制好的宏按键灯光效果</p>
</blockquote>
</li>
<li><p>开启/关闭 win键功能</p>
<p>Fn+Win键</p>
</li>
</ul>
]]></content>
      <categories>
        <category>说明书</category>
      </categories>
      <tags>
        <tag>RK71机械键盘</tag>
        <tag>说明书</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/4a17b156.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>博客展示Github_Charts</title>
    <url>/f28a9c3d.html</url>
    <content><![CDATA[<p><strong>本文主要介绍如何在个人博客中展示Github Chart。且在Github上已经有了开源工具，并提供了API，稍微配置下就行了。</strong></p>
<p><strong>工具地址：<a href="https://ghchart.rshah.org/" target="_blank" rel="noopener">Github Chart API</a></strong></p>
<p>这个工具可以实时地将<em>Github Chart</em>信息转化为一张图片，如下图所示，我们可以将其插入到我们的博客中。</p>
<p><img src="http://ghchart.rshah.org/009006/albert-5" alt="Albert's Blue Github Chart"></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>我们只需要在 <a href="https://ghchart.rshah.org/" target="_blank" rel="noopener">https://ghchart.rshah.org/</a>  这个地址上加上自己的<strong>Github用户名</strong>即可构造自己的Github Chart图片的链接了，比如我的Github名为albert-5，那就是</p>
<blockquote>
<p><a href="https://ghchart.rshah.org/albert-5" target="_blank" rel="noopener">https://ghchart.rshah.org/albert-5</a></p>
</blockquote>
<h2 id="Markdown-插入图片"><a href="#Markdown-插入图片" class="headerlink" title="Markdown 插入图片"></a>Markdown 插入图片</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">albert-5’s Github Charts</span>](<span class="link">https://ghchart.rshah.org/albert-5</span>)</span><br></pre></td></tr></table></figure>
<h2 id="HTML插入图片"><a href="#HTML插入图片" class="headerlink" title="HTML插入图片"></a>HTML插入图片</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://ghchart.rshah.org/albert-5"</span> <span class="attr">alt</span>=<span class="string">"albert-5's Github Charts"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="自定义颜色"><a href="#自定义颜色" class="headerlink" title="自定义颜色"></a>自定义颜色</h2><p>此工具还支持自定义配色方案，我们可以提供任何基本颜色来为图标添加阴影，自定义颜色可以访问<a href="https://www.w3schools.com/colors/colors_rgb.asp" target="_blank" rel="noopener">网站</a>。</p>
<p>我们只需要访问<a href="http://ghchart.rshah.org/" target="_blank" rel="noopener">http://ghchart.rshah.org/</a>&lt;##&gt;/albert-5，将##替换为我们想要设置的十六进制颜色代码（去掉颜色代码前面的#）就行了。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://ghchart.rshah.org/009006/albert-5"</span> <span class="attr">alt</span>=<span class="string">"Albert's Blue Github Chart"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul>
<li><a href="https://ghchart.rshah.org/" target="_blank" rel="noopener">Github Chart API</a></li>
</ul>
]]></content>
      <categories>
        <category>博客优化</category>
      </categories>
      <tags>
        <tag>Github Charts</tag>
      </tags>
  </entry>
</search>
